from textwrap import dedent
from typing import List
import os
import sys
from agno.agent import Agent, RunResponse  # noqa

from agno.models.deepseek import DeepSeek  # noqa
from pydantic import BaseModel, Field

sys.path.insert(0, os.path.abspath('./'))
from src_agentz.models.article import Article



# Agent that uses structured outputs
agent_structured_output_articles = Agent(
    name = "agent_structured_output_articles",
    model = DeepSeek(),
    description=dedent("""\
        "Our target audience is active, middle-aged women and men who prioritize their lifestyle and health, while also embracing adventure and new experiences.
        They value self-care, wellness, and personal growth, and are interested in products that can help them maintain a balanced and fulfilling life.
        With a focus on quality and sustainability, they seek out products that not only meet their practical needs but also align with their values and aspirations."
        Feel free to modify it to better fit your specific needs!\
    """),
    instructions=dedent("""\
        Make a simple article about the topic provided in the input.
        1. Title: A catchy title that reflects the content of the article, from 2 - 10 words.
        2. Content: A brief overview of the article, from 50 - 200 words.
        3. Affiliates Links: 1-5 affiliate links related to the article. These should be relevant and add value to the content. If you can not find them, just make some up with base domain being amazon.com, example.com, ebay.com and so on.
        4. UID: A unique identifier for the article, typically generated by the database.
        5. Created At: A timestamp of when the article was created. This is usually set by the database server.
        6. Articles Images: List of images relevant to the article. These images are stored in Firebase Storage and can be accessed using the public URL.
        

\
    """),
    response_model=Article,
    markdown=True,
    show_tool_calls=True,
    debug_mode=True,
)



if __name__ == "__main__":
    # Example usage of the agent with structured output
    response = agent_structured_output_articles.print_response(
        "Write an article about the benefits of yoga for mental health.",
        stream=True,
    )
    print(response)  # Print the structured response from the agent