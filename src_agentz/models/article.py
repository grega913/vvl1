from textwrap import dedent
from typing import List
from pydantic import BaseModel, Field


# Create an agent with structured output that will use class Article as a response model
# Assuming Article is defined somewhere like this:
class Article(BaseModel):

    title: str = Field(
        ...,
        description="A title of the article that is catchy and relevant to the content.",
    )
    content: str = Field(
        ...,
        description="What is going on in the article. Here you can put the content of the article.",
    )
    affiliatesLinks: List[str] | None = Field(
        default = [],
        description="1-5 affiliate links related to the article. These should be relevant and add value to the content. If you can not find them, just make some up with base domain being amazon.com, example.com, ebay.com and so on",
    )
    uid: str | None = Field(
        default = None,
        description="Unique identifier for the article, typically generated by the database.",
    )
    created_at: str = Field(
        ...,
        description="timestamp of when the article was created. This is usually set by the database server.",
    )
  
